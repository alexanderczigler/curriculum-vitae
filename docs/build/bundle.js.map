{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/data/cv.js","../../src/components/Tag.svelte","../../src/components/Assignment.svelte","../../src/components/Position.svelte","../../src/CV.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.19.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export const CV = {\n  Assignments: [\n    {\n      meta: {\n        customer: 'Predictive Movement',\n        origin: 'Iteam',\n        body: [\n          'I coordinate user testing and interviews as well as ensure that research and development of the PM platform is done in a user-centric manner.',\n          'In this project we are developing sustainable solutions for cargo and passenger transports in the rural parts of Sweden.',\n        ],\n        start: 2020,\n      },\n      tags: [\n        'user research',\n        'figma',\n        'ux',\n      ],\n    },\n    {\n      meta: {\n        customer: 'Göteborgsregionen',\n        origin: 'Iteam',\n        body: [\n          'I am part of a team developing functionality allowing schools in and around Göteborg to order and distribute digital educational material.',\n          'Because the users of the system we are building represent a large chunk of all schools in Sweden our goal is also to produce an API standard for the interchange of licensing information between publishers and consumers.',\n        ],\n        start: 2020,\n      },\n      tags: [\n        'microsoft .net',\n        'sql server',\n        'microservie architecture',\n      ],\n    },\n    {\n      meta: {\n        customer: 'Sound-Ideas',\n        origin: 'Iteam',\n        body: [\n          'During the years I worked with Sound-Ideas my role included maintaining and expanding the functionality of the StockMusic.com website, SQL Server database, Windows Servers and PayPal integration.',\n          'The website is an increasingly important sales channel for the royalty-free music and audio effects that Sound-Ideas produce and sell.',\n        ],\n        start: 2013,\n        end: 2018,\n      },\n      tags: [\n        '.NET',\n        'SQL Server',\n        'Windows Server',\n        'audio conversion',\n        'ffmpeg',\n        'ecommerce',\n        'PayPal',\n      ],\n    },\n    {\n      meta: {\n        customer: 'TRR Trygghetsrådet/Startkraft',\n        origin: 'Iteam',\n        body: [\n          'At TRR I worked on a web based system built for helping recruiters match available jobs with job seeking clients in their database.',\n          'We wrote an angular frontend and using a .NET solution for integrating with their other systems. Because of limitations in the legacy systems we also setup an ElasticSearch that we backfilled with data for faster search, this solution in combination with a d3 graph proved to be a solution used by the client for years after the rest of the system was replaced.',\n        ],\n        start: 2013,\n        end: 2015,\n      },\n      tags: ['.NET', 'ElasticSearch', 'AngularJS', 'd3.js'],\n    },\n    {\n      meta: {\n        customer: 'Urban Girls Movement',\n        origin: 'Iteam',\n        body: [\n          'Urban Girls Movement ran a project where they let girls remodel their neighbourhood, Fittja Centrum, to make it feel nicer and safer.',\n          'I helped export their Minecraft model of the neighbourhood so that it could be embedded on the web (via Sketchfab) and for 3D printing. The exports were used for their exhibit in 2019.',\n        ],\n        start: 2019,\n        end: 2019,\n      },\n      tags: ['Minecraft', 'Sketchfab', '3D printing'],\n    },\n    {\n      meta: {\n        customer: 'Refugee Tech',\n        origin: 'Volunteer',\n        body: [\n          'Starting at a hackathon that Refugee Tech held me and a few coworkers created “Competency”. The idea of the project is to map the competencies of refugees on their way to or already living in Sweden.',\n          'The data is meant to show media, politicians and the Swedish population that refugees have a lot of competence and talent that Sweden should utilize. In conjunction with a job search engine it can also be used to match individuals with available jobs and employers looking for talent.',\n          'Thanks to the efforts of me and the team, Competency later evolved into JobSkills - jobskills.se',\n        ],\n        start: 2016,\n        end: 2017,\n      },\n      tags: ['.NET', 'ElasticSearch', 'AngularJS'],\n    },\n    {\n      meta: {\n        customer: '(Various)',\n        origin: 'Freelance',\n        body: [\n          'During these years I worked on various small projects, some free and some paid. I learned the basics of writing html and designing for the web and I learned a lot about networking and setting up different types of servers under linux, freebsd and Windows.',\n          'In most of the paid projects I designed simple websites and delivered the necessary html and css to the customer so they could fill it with content and deploy it. For some projects I also wrote some php code and integrated with MySQL.',\n        ],\n        start: 2003,\n        end: 2010,\n      },\n      tags: [\n        'freebsd',\n        'linux',\n        'windows server',\n        'apache',\n        'nginx',\n        'ircd',\n        'jabberd',\n        'ftpd',\n        'web design',\n        'php',\n        'mysql',\n      ],\n    },\n    {\n      meta: {\n        customer: 'Getinge',\n        origin: 'Pdb',\n        body: [\n          'At Getinge I worked on a system for managing after market prices on their spare parts. I helped develop and maintain this system and in addition to that I also worked with DataSet Vision to visualise data and trends from data in their Lawson M3.',\n          'The solutions I worked on helps them make better decisions, such as knowing which spare parts they can sell for a profit and which ones are readily available from competitors.',\n        ],\n        start: 2008,\n        end: 2010,\n      },\n      tags: ['.NET', 'Lawson M3', 'DataSet Vision'],\n    },\n    {\n      meta: {\n        customer: 'Atlas Copco',\n        origin: 'Pdb',\n        body: [\n          'At Atlas Copco I development various small BI applications using DataSet Vision, SQL Server and some lighter .NET code.',\n          'The solutions I worked on helps Atlas Copco make better decisions by visualising trends in their own data.',\n        ],\n        start: 2008,\n        end: 2010,\n      },\n      tags: ['DataSet Vision', 'SQL Server', 'Lawson M3'],\n    },\n    {\n      meta: {\n        customer: 'Panasonic Europe',\n        origin: 'Pdb',\n        body: [\n          \"I was part of a team responsible for maintenance of Pansonic's European B2B webshops. The code we worked on was built with .NET and the system integrated with SAP that owned all the product and price data.\",\n          \"The B2B webshops were used by several large-scale retailers around Europe and a large chunk of Panasonic's yearly profits run through them.\",\n        ],\n        start: 2009,\n        end: 2010,\n      },\n      tags: ['.NET', 'ecommerce', 'SAP'],\n    },\n    {\n      meta: {\n        customer: 'Panasonic Nordic',\n        origin: 'Pdb',\n        body: [\n          'At Panasonic Nordic I was part of a team that built a tool used for sales budgeting and forecasting. The system helps Panasonic Nordic analyse sales and make predictions in order to optimise warehousing and distribution of their products.',\n        ],\n        start: 2009,\n        end: 2010,\n      },\n      tags: ['.NET', 'SQL Server'],\n    },\n    {\n      meta: {\n        customer: 'Dovado',\n        origin: 'Pdb',\n        body: [\n          'When 3G was a new thing, Dovado were very early offering a network router that supported USB modems. This router enabled customers to connect several computers and devices to a Wi-Fi that in turn shared a single 3G internet connection.',\n          'During my time at Dovado I helped them study how different 3G USB dongles behaved when connected to their router. I wrote and optimised the scripts that would detect specific dongles and make them switch to modem mode and connect to the internet.',\n          'This project was super fun and I learned a lot about linux, embedded linux and shell scripting.',\n        ],\n        start: 2008,\n        end: 2008,\n      },\n      tags: ['linux', 'embedded', 'shell', 'ash', 'busybox', 'usb', '3g'],\n    },\n    {\n      meta: {\n        customer: 'TV4 Gruppen',\n        origin: 'Mogul',\n        body: [\n          'I was part of a team repsonsible for development and maintenance of TV4\\'s sales support system \"L4\".',\n          'This system is used by the entire sales force of TV4, with users all over Sweden. It handles the sales, budgeting and forecasting of advertisement sales for all of their channels.',\n        ],\n        start: 2010,\n        end: 2013,\n      },\n      tags: ['.NET', 'SQL Server', 'CI'],\n    },\n    {\n      meta: {\n        customer: 'JobTech',\n        origin: 'Iteam',\n        body: [\n          'Implementation of CI/CD pipelines, automatic builds, automatic testing etc. for the JobTech MyData project.',\n        ],\n        start: 2019,\n        end: 2019,\n      },\n      tags: [\n        'docker',\n        'kubernetes',\n        'openshift',\n        'linux',\n        'postgresql',\n        'jenkins',\n      ],\n    },\n    {\n      meta: {\n        customer: 'V3VO - Vertical Evolution',\n        origin: 'Iteam',\n        body: [\n          'I was part of a kanban team that developed a new gamified iOS/Android app from scratch and released an MVP in about three months.',\n          'My role was to design and build the backend services as well as making sure that the team was able to build and release features in a smooth and efficient manner. I built a REST API using nodejs and express and using postgres to store persistent data. I used Auth0 to authenticate users and we implemented JWKS in the app as well as the backend.',\n          'Hosting and automated testing and deployment was done using GitHub Actions and docker/kubernetes.',\n        ],\n        start: 2019,\n        end: 2020,\n      },\n      tags: [\n        'docker',\n        'kubernetes',\n        'linux',\n        'postgresql',\n        'expo',\n        'auth0',\n        'node',\n        'jwt',\n        'digital ocean',\n      ],\n    },\n    {\n      meta: {\n        customer: 'TRR Trygghetsrådet',\n        origin: 'Iteam',\n        body: [\n          'As a UX Researcher at TRR Trygghetsrådet I have been helping them to understand their role in the Swedish job market and how to maximize their impact. I was a part of a team that worked on developing a new customer portal and my role was to gain understanding and important insights from their customers.',\n          'My work included acting as a bridge between the core organisation and the developers in our team. I planned and conducted interviews with HR personnel in various small and large organisations around Sweden. After the interviews I aggregated the findings and presented them to my team and stakeholders.',\n          'I also assisted in facilitating workshops such as design sprints and user story mapping.',\n        ],\n        start: 2019,\n        end: 2020,\n      },\n      tags: [\n        'ux research',\n        'user interviews',\n        'user research',\n        'design sprint',\n        'user story mapping',\n        'lean ux',\n      ],\n    },\n    {\n      meta: {\n        customer: 'Motorbranschens Riksförbund',\n        origin: 'Iteam',\n        body: [\n          'I am helping Motorbranschens Riksförbund to develop and maintain a system that integrates with Swedish insurance companies through their insurance platform CABAS. Our system is used by mechanical and paint workshops to manage billing, damage and insurance information. Some workshops also use it to manage and track their internal time when repairing cars.',\n          'We are supporting an old .NET version of the system while developing a new web based version.. The team is working in a user centric manner where even developers join user interviews and everyone in the team has a firm understanding of the user\\'s needs.',\n          'The new solution we are developing is based on nodejs and I have set it up to run automated builds and tests in GitLab. The hosting is done using docker and kubernetes in AWS EKS.',\n        ],\n        start: 2018,\n        end: 2020,\n      },\n      tags: [\n        'node',\n        'postgresql',\n        'ux research',\n        'lean ux',\n        'aws',\n        'eks',\n        'kubernetes',\n      ],\n    },\n    {\n      meta: {\n        customer: 'SEB',\n        origin: 'Iteam',\n        body: [\n          'When I joined SEB in 2017 they had formed a team called SEB Morning with a mission of researching and building a foundation for a new version of their internet based private banking web. This team also had an ambition of finding new ways of working while doing this.',\n          'As a member of this team I mainly focused on two different areas of the work they were doing; the way of working and their code. I helped build a clear understanding of what our MVP would be and what needed to happen both within and outside of the team for it to be released. I also did a lot of pair-programming with their lead developer and their architect to build prototypes for what would later become part of the MVP.',\n          'This team also had a couple of dedicated testers and together we developed a plan to involve them earlier on in the development process. Using BDD methodology we also involved the product owner in writing end-to-end tests.',\n          'My work in this team influenced SEB to become more open to working with open source software and improving developer experience across the bank.',\n          'Apart from this I was also involved in a cross discipline group that was working on implementing Docker Enterprise and Docker for Windows at SEB.',\n        ],\n        start: 2017,\n        end: 2019,\n      },\n      tags: [\n        'Microsoft .NET',\n        'dotnet core',\n        'javascript',\n        'docker',\n        'docker swarm',\n        'kubernetes',\n        'docker enterprise',\n        'devops thinking',\n        'devops culture',\n        'agile coaching',\n      ],\n    },\n    {\n      meta: {\n        customer: 'Uppdragshuset',\n        origin: 'Iteam',\n        body: [\n          'Uppdragshuset wanted to look into containerizing their development process and their hosting. I worked closely with two of their developers as they explored the possibilities of using Docker.',\n        ],\n        start: 2015,\n        end: 2016,\n      },\n      tags: ['docker', 'docker cloud'],\n    },\n    {\n      meta: {\n        customer: 'Taxi Stockholm AB',\n        origin: 'Iteam',\n        body: [\n          'Played a role in the creation and setup of TSAB’s cloud orchestrated Docker environment with Docker cloud and Microsoft Azure.',\n          'Development of data mining and market automation applications using node.js to process and transfer data from MySQL and Oracle DB to no-sql databases (RethinkDB and ElasticSearch).',\n          'Development of a RESTful API in node.js, integrations with SOAP API:s, Oracle DB and RPC backends.',\n        ],\n        start: 2015,\n        end: 2017,\n      },\n      tags: [\n        '.NET',\n        'node',\n        'legacy API:s',\n        'MySQL',\n        'Oracle DB',\n        'Azure',\n        'docker cloud',\n        'RethinDB',\n        'ElasticSearch',\n      ],\n    },\n    {\n      meta: {\n        customer: 'Vimla',\n        origin: 'Iteam',\n        body: [\n          'Developer and technical advisor for Vimla’s website/customer portal (.NET), REST API (nodejs) and community platform (nodebb).',\n          'Integrations with SOAP APIs, Lithium and payment providers DIBS and Klarna. Moved the project over from TFS to Git and TeamCity, improving the development workflow and ability to handle branches and isolated features. Setup continuous integration workflow from GitHub to Docker Cloud.',\n          'Responsible for the setup and maintenance of their linux-based servers running Docker.',\n        ],\n        start: 2014,\n        end: 2018,\n      },\n      tags: [\n        '.NET',\n        'node',\n        'legacy API:s',\n        'linux',\n        'Oracle DB',\n        'docker swarm',\n        'Klarna',\n        'DIBS',\n      ],\n    },\n  ],\n  Links: [\n    {\n      url: 'https://github.com/alexanderczigler',\n      title: 'GitHub Profile',\n      type: 'presence',\n    },\n    {\n      url: 'https://iteam.se/medarbetare/acr',\n      title: 'Iteam Solutions',\n      type: 'presence',\n    },\n    {\n      url:\n        'https://www.goodreads.com/review/list/53571813-alexander?shelf=read',\n      title: 'Goodreads',\n      type: 'presence',\n    },\n    {\n      url:\n        'http://www.ahousestockholm.com/ai-billgren-talk-with-christian-landgren/',\n      title: 'AI-Billgren',\n      type: 'mention',\n    },\n    {\n      url: 'https://egendata.se/om-oss/',\n      title: 'Egendata',\n      type: 'mention',\n    },\n  ],\n  Positions: [\n    {\n      meta: {\n        employer: 'Iteam Solutions',\n        title: 'Code, DevOps and NoEstimates Mentor',\n        body: [\n          'At Iteam I started working as a system developer and focusing on .NET. During my time here we have shifted from .NET towards javascript and node. I have also grown a lot in my role; learning about DevOps culture, docker, kubernetes, UX research and mentoring.',\n        ],\n        start: 2013,\n        end: null,\n      },\n      location: {\n        city: 'Stockholm',\n        country: 'Sweden',\n      },\n      tags: ['development', 'devops', 'ux', 'mentoring', 'agile', 'advisory'],\n    },\n    {\n      meta: {\n        employer: 'Mogul',\n        title: 'System Developer',\n        body: [\n          'My time at Mogul consisted of working as a consultant for TV4, maintaining and developing their sales support system. It was a very valuable time for me where I got to polish my skills as a developer and learn a lot about .NET and SQL Server. Towards the end I also got to experience what it is like to take on the role as a tech lead, since I became responsible for enrolling new developers in the team.',\n        ],\n        start: 2010,\n        end: 2013,\n      },\n      location: {\n        city: 'Stockholm',\n        country: 'Sweden',\n      },\n      tags: ['consulting', 'development', 'advisory', 'tech lead'],\n    },\n    {\n      meta: {\n        employer: 'Pdb (formerly Hitone Nordic)',\n        title: 'System Developer',\n        body: [\n          'During my time at Hitone (that later became Pdb) I worked on various Business Intelligence projects, learning a lot about databases and SQL. This is also where I started learning .NET in depth and towards the end of my time at Pdb I spend most of my time writing code.',\n        ],\n        start: 2008,\n        end: 2010,\n      },\n      location: {\n        city: 'Stockholm',\n        country: 'Sweden',\n      },\n      tags: ['development', 'business intelligence'],\n    },\n\n    {\n      meta: {\n        employer: 'Freelance',\n        title: 'Developer/Tech',\n        body: [\n          'From the time I was in high school and until around 2010 I did various gigs ranging from web design to server setup and hosting. This is a time when I learned a lot about linux/unix and networking. Some of the gigs I did consisted of web design and lighter php development.',\n        ],\n        start: 2003,\n        end: 2010,\n      },\n      location: {\n        city: 'Stockholm',\n        country: 'Sweden',\n      },\n      tags: ['linux', 'freebsd', 'networking', 'web design'],\n    },\n  ],\n}\n","<script>\n  export let tag\n</script>\n\n<style>\n  div {\n    background-color: var(--myrtle);\n    border-radius: 2px;\n    color: var(--white);\n    display: inline-block;\n    font-family: 'Fira Code', monospace;\n    font-size: 0.7em;\n    font-weight: 300;\n    margin: 2px 4px 2px 0px;\n    padding: 4px 8px;\n  }\n\n  i {\n    color: var(--azure);\n  }\n</style>\n\n<div>\n  <i class=\"fa fa-tag\" />\n  {tag}\n</div>\n","<script>\n  export let assignment\n  import Tag from './Tag.svelte'\n</script>\n\n<style>\n  div.assignment {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    align-items: stretch;\n    align-content: stretch;\n  }\n\n  span.time {\n    color: var(--myrtle);\n    font-weight: 100;\n    vertical-align: top;\n    width: 10em;\n  }\n\n  span.information {\n    vertical-align: top;\n    width: 100%;\n    margin-bottom: 2em;\n  }\n\n  span.customer {\n    font-weight: 600;\n    color: var(--black);\n  }\n\n  span.head {\n    width: 100%;\n    padding-bottom: 10px;\n    display: block;\n  }\n\n  span.body {\n    width: 100%;\n    padding-bottom: 10px;\n    display: block;\n  }\n\n  @media print {\n    span.information {\n      margin-bottom: 0.5em;\n    }\n\n    span.time {\n      color: #000000;\n    }\n  }\n</style>\n\n<div class=\"assignment\">\n  <span class=\"time\">\n    {assignment.meta.start} &mdash;\n    {#if assignment.meta.end}{assignment.meta.end}{/if}\n  </span>\n\n  <span class=\"information\">\n    <span class=\"head\">\n      <span class=\"customer\">{assignment.meta.customer}</span>\n      ({assignment.meta.origin} consultant)\n    </span>\n\n    {#each assignment.meta.body as text}\n      <span class=\"body\">{text}</span>\n    {/each}\n\n    <span class=\"web\">\n      {#each assignment.tags as tag}\n        <Tag {tag} />\n      {/each}\n    </span>\n  </span>\n</div>\n","<script>\n  export let position\n  import Tag from './Tag.svelte'\n</script>\n\n<style>\n  div.position {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    align-items: stretch;\n    align-content: stretch;\n  }\n\n  span.time {\n    color: var(--myrtle);\n    font-weight: 100;\n    vertical-align: top;\n    width: 10em;\n  }\n\n  span.information {\n    vertical-align: top;\n    width: 100%;\n    margin-bottom: 2em;\n  }\n\n  span.title,\n  span.employer {\n    font-weight: 600;\n    color: var(--black);\n  }\n\n  span.head {\n    width: 100%;\n    padding-bottom: 10px;\n    display: block;\n  }\n\n  span.body {\n    width: 100%;\n    padding-bottom: 10px;\n    display: block;\n  }\n\n  @media print {\n    span.information {\n      margin-bottom: 0.5em;\n    }\n\n    span.time {\n      color: #000000;\n    }\n  }\n</style>\n\n<div class=\"position\">\n  <span class=\"time\">\n    {position.meta.start} &mdash;\n    {#if position.meta.end}{position.meta.end}{/if}\n  </span>\n\n  <span class=\"information\">\n    <span class=\"head\">\n      <span class=\"title\">{position.meta.title}</span>\n      at\n      <span class=\"employer\">{position.meta.employer}</span>\n    </span>\n\n    {#each position.meta.body as text}\n      <span class=\"body\">{text}</span>\n    {/each}\n\n    <span class=\"web\">\n      {#each position.tags as tag}\n        <Tag {tag} />\n      {/each}\n    </span>\n  </span>\n</div>\n","<script>\n  import { CV } from './data/cv.js'\n\n  import Assignment from './components/Assignment.svelte'\n  import Position from './components/Position.svelte'\n\n  const sortDelegate = (a, b) => {\n    let aa = a.meta.start + (a.meta.end - a.meta.start) / 10\n    let bb = b.meta.start + (b.meta.end - b.meta.start) / 10\n\n    if (aa > bb) {\n      return -1\n    }\n\n    if (aa < bb) {\n      return 1\n    }\n\n    return 0\n  }\n\n  // Order assignments and positions by start year.\n  CV.Assignments.sort((x, y) => sortDelegate(x, y))\n</script>\n\n<div class=\"section body\">\n  <h3>Curriculum Vitae</h3>\n  <p>\n    My career is characterized by diversity and learning. I have had the\n    opportunity to work on several different projects taking on different roles\n    in many of them. Each one has taught me something valuable and I have met a\n    lot of intelligent and inspiring people along the way.\n  </p>\n  <p>\n    Some of my current goals in life include learning more about mentoring,\n    group psychology and interview technique. From my experience, in order for\n    an IT project to succeed, team members need to have empathy and experience\n    connectedness with each other as well as the end users of their product.\n    This is the reason why I love to keep writing code while also being\n    passionate about learning about the key to creating successful teams,\n    sharing knowledge and understanding users.\n  </p>\n\n  <p>To sum up, I have two firm beliefs about software development:</p>\n  <ol>\n\n    <li>\n      The best code is written by developers who empathize with the end user.\n    </li>\n    <li>\n      Complex problems are best solved by developers who master cooperation and\n      the sharing of knowledge.\n    </li>\n  </ol>\n\n  <p class=\"web\">\n    You can find some of my work on\n    <a href=\"https://github.com/alexanderczigler\" target=\"_blank\">\n      <i class=\"fa fa-github\" />\n      GitHub\n    </a>\n    and\n    <a href=\"https://hub.docker.com/u/aczigler\" target=\"_blank\">\n      <i class=\"fab fa-docker\" />\n      Docker Hub\n    </a>\n  </p>\n\n  <h4>Positions</h4>\n  {#each CV.Positions as position}\n    <Position {position} />\n  {/each}\n\n  <h4>Projects</h4>\n  {#each CV.Assignments as assignment}\n    <Assignment {assignment} />\n  {/each}\n\n  <h3>Other information</h3>\n  <p>\n    I am a Swedish citizen and my native tounge is Swedish. I may be available\n    for consultancy assignments. If you wish to get in touch with me, I prefer\n    if you send me a text message on +46727145060.\n  </p>\n  <p class=\"web\">\n    Hint: I have added a print css so that you can save my CV as a neat PDF (or\n    print it) via your regular printing dialogue.\n  </p>\n</div>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body,\n})\n\nexport default app"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","ready","ret","rest","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","CV","Assignments","meta","customer","origin","body","start","tags","end","Links","url","title","Positions","employer","location","city","country","tag","assignment","position","sort","x","y","aa","bb","sortDelegate"],"mappings":"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"}